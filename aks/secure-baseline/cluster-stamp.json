{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.3",
    "parameters": {
        "location": {
            "defaultValue": "eastus2",
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "northeurope",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "AKS Service, Node Pool, and supporting services (KeyVault, App Gateway, etc) region.  The network team maintains this approved regional list which is a subset of zones with Availability Zone support."
            }
        },
        "targetVnetResourceId": {
            "type": "string"
        },
        "k8sRbacAadProfileServerAppId": {
            "type": "string",
            "metadata": {
                "description": "This is the Server App ID for k8s RBAC via AAD"
            }
        },
        "k8sRbacAadProfileServerAppSecret": {
            "type": "string",
            "metadata": {
                "description": "This is the Server App ID's secret for k8s RBAC via AAD"
            }
        },
        "k8sRbacAadProfileClientAppId": {
            "type": "string",
            "metadata": {
                "description": "This is the App registration Client ID that represents clients like kubectl"
            }
        },
        "k8sRbacAadProfileTennetId": {
            "type": "string",
            "metadata": {
                "description": "This is tennant where the ServerAppId, ServerAppSecret, ClientAppId all reside."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.17.3",
            "type": "string"
        },
        "keyvaultAclAllowedSubnetResourceIds": {
            "type": "array",
            "metadata": {
                "description": "the subnets to give access to the key vault."
            }
        }
    },
    "variables": {
        "orgAppId": "BU0001A0008",

        "networkContributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7')]",
        "monitoringMetricsPublisherRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/3913510d-42f4-4e42-8a64-420c390055eb')]",
        "acrPullRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/7f951dda-4ed3-4680-a7ca-43fe172d538d')]",

        "subRgUniqueString": "[uniqueString('aks', subscription().subscriptionId, resourceGroup().id)]",

        "clusterName": "[concat('aks-', variables('subRgUniqueString'))]",
        "nodePoolRgName": "[concat('rg-', variables('clusterName'), '-nodepools')]",

        "logAnalyticsWorkspaceName": "[concat('la-', variables('clusterName'))]",
        "containerInsightsSolutionName": "[concat('ContainerInsights(', variables('logAnalyticsWorkspaceName'),')')]",

        "defaultAcrName": "[concat('acraks', variables('subRgUniqueString'))]",

        "vNetResourceGroup": "[split(parameters('targetVnetResourceId'),'/')[4]]",
        "vNetName": "[split(parameters('targetVnetResourceId'),'/')[8]]",

        "vnetNodePoolSubnetName": "snet-clusternodes",

        "vnetNodePoolSubnetResourceId": "[concat(parameters('targetVnetResourceId'), '/subnets/', variables('vnetNodePoolSubnetName'))]",

        "clusterMonitoringMetricsPublisherRoleAssignmentName": "[concat(variables('clusterName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('monitoringMetricsPublisherRole')))]",
        "networkRoleAssignmentName": "[concat(variables('vNetName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('networkContributorRole')))]",
        "acrRoleAssignmentName": "[concat(variables('defaultAcrName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('acrPullRole')))]",
        "dnsPrefix": "[uniqueString(subscription().subscriptionId, resourceGroup().id, variables('clusterName'))]",

        "keyVaultName": "[concat( 'kv-', variables('clusterName')) ]",

        "agwName": "[concat( 'apw-', variables('clusterName')) ]",
        "vnetGatewaySubnetName": "snet-applicationgateways",
        "vnetAgwSubnetResourceId": "[concat(parameters('targetVnetResourceId'), '/subnets/', variables('vnetGatewaySubnetName'))]",
        "appGatewayPipName": "[concat('pip-', variables('orgAppId'), '-00')]",
        "apwPublicIPResourceId": "[resourceId(subscription().subscriptionId,variables('vNetResourceGroup'),'Microsoft.Network/publicIpAddresses',variables('appGatewayPipName'))]",
        "apwResourceId": "[resourceId('Microsoft.Network/applicationGateways', variables('agwName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "accessPolicies": [
                ],
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "networkAcls": {
                    "bypass": "None",
                    "defaultAction": "Deny",
                    "copy": [
                        {
                            "name": "virtualNetworkRules",
                            "count": "[length(parameters('keyvaultAclAllowedSubnetResourceIds'))]",
                            "input": {
                                "id": "[parameters('keyvaultAclAllowedSubnetResourceIds')[copyIndex('virtualNetworkRules')]]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('agwName')]",
            "location": "[parameters('location')]",
            "zones": [
                "1",
                "2",
                "3"
            ],
            "tags": {
            },
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "apw-ip-configuration",
                        "properties": {
                            "subnet": {
                                "id": "[variables('vnetAgwSubnetResourceId')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "apw-frontend-ip-configuration",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('apwPublicIPResourceId')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "apw-frontend-ports",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "autoscaleConfiguration": {
                    "minCapacity": "0",
                    "maxCapacity": "10"
                },
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0"
                },
                "enableHttp2": false,
                "sslCertificates": [
                ],
                "probes": [
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool-clusteringress",
                        "properties": {
                            "backendAddresses": [
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "httpsettings-default",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "listener-default",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('apwResourceId'), '/frontendIPConfigurations/apw-frontend-ip-configuration')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('apwResourceId'), '/frontendPorts/apw-frontend-ports')]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "apw-routing-rules",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('apwResourceId'), '/httpListeners/listener-default')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('apwResourceId'), '/backendAddressPools/bepool-clusteringress')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('apwResourceId'), '/backendHttpSettingsCollection/httpsettings-default')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EnsureClusterSpHasRbacToVNet",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]"
            ],
            "resourceGroup": "[variables('vNetResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[variables('networkRoleAssignmentName')]",
                            "properties": {
                                "roleDefinitionId": "[variables('networkContributorRole')]",
                                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName')), '2020-03-01').identityProfile.kubeletidentity.objectId]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[variables('logAnalyticsWorkspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationsManagement/solutions",
            "name": "[variables('containerInsightsSolutionName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            },
            "plan": {
                "name": "[variables('containerInsightsSolutionName')]",
                "product": "OMSGallery/ContainerInsights",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "name": "[variables('defaultAcrName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Premium"
            },
            "properties": {
                "adminUserEnabled": false,
                "networkRuleSet": {
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "action": "Allow",
                            "id": "[variables('vnetNodePoolSubnetResourceId')]"
                        }
                    ],
                    "ipRules": [
                    ]
                },
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 15,
                        "status": "enabled"
                    }
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2020-03-01",
            "name": "[variables('clusterName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.OperationsManagement/solutions', variables('containerInsightsSolutionName'))]"
            ],
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[variables('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "npsystem",
                        "count": 3,
                        "vmSize": "Standard_DS2_v2",
                        "osDiskSizeGB": 512,
                        "osType": "Linux",
                        "minCount": 3,
                        "maxCount": 4,
                        "vnetSubnetID": "[variables('vnetNodePoolSubnetResourceId')]",
                        "enableAutoScaling": true,
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "scaleSetPriority": "Regular",
                        "scaleSetEvictionPolicy": "Delete",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "maxPods": 30,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ]
                    },
                    {
                        "name": "npuser01",
                        "count": 2,
                        "vmSize": "Standard_DS3_v2",
                        "osDiskSizeGB": 512,
                        "osType": "Linux",
                        "minCount": 2,
                        "maxCount": 5,
                        "vnetSubnetID": "[variables('vnetNodePoolSubnetResourceId')]",
                        "enableAutoScaling": true,
                        "type": "VirtualMachineScaleSets",
                        "mode": "User",
                        "scaleSetPriority": "Regular",
                        "scaleSetEvictionPolicy": "Delete",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "maxPods": 30,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ]
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "msi",
                    "secret": null
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "omsagent": {
                        "enabled": true,
                        "config": {
                            "logAnalyticsWorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
                        }
                    },
                    "aciConnectorLinux": {
                        "enabled": false
                    },
                    "azurePolicy": {
                        "enabled": true
                    },
                    "kubeDashboard": {
                        "enabled": false
                    }
                },
                "nodeResourceGroup": "[variables('nodePoolRgName')]",
                "enableRBAC": true,
                "enablePodSecurityPolicy": false,
                "maxAgentPools": 2,
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "outboundType": "userDefinedRouting",
                    "loadBalancerSku": "standard",
                    "loadBalancerProfile": "[json('null')]",
                    "serviceCidr": "172.16.0.0/16",
                    "dnsServiceIP": "172.16.0.10",
                    "dockerBridgeCidr": "172.18.0.1/16"
                },
                "aadProfile": {
                    "serverAppID": "[parameters('k8sRbacAadProfileServerAppId')]",
                    "clientAppID": "[parameters('k8sRbacAadProfileClientAppId')]",
                    "serverAppSecret": "[parameters('k8sRbacAadProfileServerAppSecret')]",
                    "tenantID": "[parameters('k8sRbacAadProfileTennetId')]"
                },
                "autoScalerProfile": {
                    "scan-interval": "10s",
                    "scale-down-delay-after-add": "10m",
                    "scale-down-delay-after-delete": "20s",
                    "scale-down-delay-after-failure": "3m",
                    "scale-down-unneeded-time": "10m",
                    "scale-down-unready-time": "20m",
                    "scale-down-utilization-threshold": "0.5",
                    "max-graceful-termination-sec": "600"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": false
                }
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('clusterName'), '/Microsoft.Insights/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "logs": [
                    {
                        "category": "cluster-autoscaler",
                        "enabled": true
                    },
                    {
                        "category": "kube-controller-manager",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('clusterMonitoringMetricsPublisherRoleAssignmentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('monitoringMetricsPublisherRole')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName')), '2020-03-01').identityProfile.kubeletidentity.objectId]"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('defaultAcrName'), '/Microsoft.Insights/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('defaultAcrName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "metrics": [
                    {
                        "timeGrain": "PT1M",
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ],
                "logs": [
                    {
                        "category": "ContainerRegistryRepositoryEvents",
                        "enabled": true
                    },
                    {
                        "category": "ContainerRegistryLoginEvents",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('acrRoleAssignmentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('defaultAcrName'))]",
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('acrPullRole')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName')), '2020-03-01').identityProfile.kubeletidentity.objectId]"
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName')), '2020-03-01').fqdn]"
        }
    }
}
